name: ci-cd-github

on:
  push:
    branches: [ 'main' ]
  pull_request:
    branches: [ 'main' ]

permissions:
  contents: read
  packages: write

env:
  IMAGE_NAME: ci-cd-demo
  REGISTRY: ghcr.io/jgak
  SHORT_SHA: ${{ github.sha }}

jobs:
  build_test_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        working-directory: ./app
        run: |
          docker build -t $REGISTRY/$IMAGE_NAME:${SHORT_SHA} .

      - name: Smoke test
        run: |
          docker run -d -p 8080:80 --name ci-cd-test $REGISTRY/$IMAGE_NAME:${SHORT_SHA}
          sleep 3
          curl -f http://localhost:8080 | grep -E 'Bienvenue|Version|Deployee|Deploy'
          docker rm -f ci-cd-test

      - name: Push image to GHCR
        if: github.ref == 'refs/heads/main'
        run: |
          docker push $REGISTRY/$IMAGE_NAME:${SHORT_SHA}

  deploy:
    if: github.ref == 'refs/heads/main'
    needs: [ build_test_push ]
    runs-on: self-hosted

    steps:
      - name: Contexte Kubernetes
        run: |
          kubectl config current-context
          kubectl get nodes

      - name: Deploiement
        env:
          IMAGE_REF: ghcr.io/jgak/ci-cd-demo:${{ github.sha }}
        run: |
          kubectl set image deployment/ci-cd-demo ci-cd-demo=${IMAGE_REF}
          kubectl rollout status deployment/ci-cd-demo --timeout=120s
